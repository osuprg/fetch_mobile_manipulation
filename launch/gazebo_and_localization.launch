<launch>
  <arg name="robot" default="fetch"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/> <!--Doesnt work, gazebo bug -->
  <arg name="rviz" default="false"/>

  <!-- Start Gazebo with a blank world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="worlds/empty.world"/>
  </include>

  <!-- Oh, you wanted a robot? Already spawned by world file -->
  <include file="$(find navr)/launch/$(arg robot).launch.xml">
  	<arg name="x" value="0.0" />
  	<arg name="y" value="0.0" />
  	<arg name="z" value="0.0" />
  	<arg name="yaw" value="1.57"/>
  </include>

   <node pkg="navr" type="broadcaster.py" name="odom_fake_publisher"/>

  <!-- Navigation requires at least one map.
       In addition, it is sometimes desirable to have a "keepout" map
       which is used for costmaps, but not localization -->
  <arg name="map_file" default="$(find navr)/maps/grasp_map_perfect.yaml" />
  <arg name="map_keepout_file" default="$(find fetch_maps)/maps/3_1_16_keepout.yaml" />
  <arg name="use_keepout" default="false" />

  <!-- Navigation parameter files -->
  <arg name="move_base_include" default="$(find fetch_navigation)/launch/include/move_base.launch.xml" />
  <arg name="amcl_include" default="$(find fetch_navigation)/launch/include/amcl.launch.xml" />
  
  <!--world and map are aligned for fake odometry -->
  <!--<node pkg="tf" type="static_transform_publisher" name="gazebo2rviz" args="0 0 0 0 0 0 /world /map 50"/>-->
  <!-- serve up a map -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- serve up a map with keepout zones -->
  <group if="$(arg use_keepout)" >
  <node name="map_keepout_server" pkg="map_server" type="map_server" args="$(arg map_keepout_file)" >
    <remap from="map" to="map_keepout" />
    <remap from="static_map" to="static_map_keepout" />
  </node>
  </group>

  <!-- localize the robot. Note, currently we use fake odometry, no amcl. Need 
   to include it and run if running on Real robot. -->
  <!--<include file="$(arg amcl_include)" />-->

  <!-- move the robot -->
  <include file="$(arg move_base_include)" >
    <arg name="name" value="fetch" />
    <arg if="$(arg use_keepout)" name="map_topic" value="map_keepout" />
    <!--<arg name="odom_topic" value="odom_fake_2"/>-->
  </include>

  <!-- tilt the head -->
  <node pkg="fetch_navigation" type="tilt_head.py" name="tilt_head_node" />
  
   <!-- Start MoveIt -->
  <include file="$(find fetch_moveit_config)/launch/move_group.launch" >
    <arg name="info" value="true"/><!-- publish grasp markers -->
  </include>

  <!-- use our own srdf file -->
  <param name="robot_description_semantic" textfile="$(find navr)/config/moveit/fetch.srdf"/>
  
  <!-- override the kinematics with our kinematics file -->
  <group ns="robot_description_kinematics">
    <rosparam command="load" file="$(find navr)/config/moveit/kinematics.yaml"/>
  </group>
 
  <!-- use our own yaml files -->
   
   <group ns="move_group">
   <rosparam command="load" file="$(find navr)/config/moveit/ompl_planning.yaml"/>
   <rosparam command="load" file="$(find navr)/config/moveit/sensors.yaml"/>
   <rosparam command="load" file="$(find navr)/config/moveit/controllers.yaml"/>
   </group>
   
  <!--some moveit hyperparams -->
  <rosparam command="load" file = "$(find navr)/config/moveit_params.yaml"/>
  
  <!-- we are saying gazebo world center is map center using a static publisher -->
  <node pkg="tf" type="static_transform_publisher" name="gazebo2rviz" args="0 0 0 0 0 0 /map /odom 50"/>

  <!-- optional rviz launch -->
  <group if="$(arg rviz)">
  <node type="rviz" name="rviz" pkg="rviz"/>
  </group>


</launch>
